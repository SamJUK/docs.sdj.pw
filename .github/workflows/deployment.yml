name: Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - staging

concurrency:
  group: ${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}
      url: ${{ github.ref == 'refs/heads/master' && 'https://docs.sdj.pw/' || 'https://staging-docs.sdj.pw/' }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build contributors artifact
        run: bash scripts/build-contributor-database.sh
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build with VitePress
        run: make build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vitepress-dist
          path: ./.vitepress/dist

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - uses: actions/checkout@master

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: vitepress-dist
          path: ./public

      - name: Create SSH key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Deploy
        run: sh ./deploy.sh
        env:
          REMOTE_HOST: "${{ secrets.REMOTE_HOST }}"
          REMOTE_PATH: "${{ secrets.REMOTE_PATH }}"
          REMOTE_PORT: "${{ secrets.REMOTE_PORT }}"
          CLOUDFLARE_CACHE_ZONE: "${{ secrets.CLOUDFLARE_CACHE_ZONE }}"
          CLOUDFLARE_CACHE_TOKEN: "${{ secrets.CLOUDFLARE_CACHE_TOKEN }}"
          DISCORD_WEBHOOK_ID: "${{ secrets.DISCORD_WEBHOOK_ID }}"
          DISCORD_WEBHOOK_TOKEN: "${{ secrets.DISCORD_WEBHOOK_TOKEN }}"
